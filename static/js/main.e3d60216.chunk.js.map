{"version":3,"sources":["components/CountryCard/CountryCard.js","components/EveryCountry/EveryCountry.js","App.js","reportWebVitals.js","index.js"],"names":["CountryCard","country","className","src","countryInfo","flag","alt","continent","population","cases","todayCases","deaths","todayDeaths","recovered","todayRecovered","active","critical","casesPerOneMillion","deathsPerOneMillion","tests","testsPerOneMillion","oneCasePerPeople","oneDeathPerPeople","oneTestPerPeople","activePerOneMillion","recoveredPerOneMillion","criticalPerOneMillion","EveryCountry","countriesArray","handleClick","onSearchChange","type","placeholder","onChange","map","index","onClick","App","event","setState","searchfield","target","value","state","length","innerHTML","isCountryDisplayed","fetch","then","response","json","data","this","filteredCountries","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3d60216.chunk.js","sourcesContent":["import React from 'react'\r\nimport './CountryCard.css'\r\n\r\n\r\nconst CountryCard = ({ country }) => {\r\n    return(\r\n        <div className='countryCard'>\r\n            <h3>{country.country}</h3>\r\n            <div className='cardLittleInfo'>\r\n                <img className='countryImg' src={country.countryInfo.flag} alt=''/>\r\n                <div className='smallInfo'>\r\n                    <p>Continent: {country.continent}</p>\r\n                    <p>Population: {country.population}</p>\r\n                </div>\r\n            </div>\r\n            <div className='container'>\r\n                <div className='infoBox'><p>Total Case</p><p>{country.cases}</p></div>\r\n                <div className='infoBox'><p>Today Cases</p><p>{country.todayCases}</p></div>\r\n                <div className='infoBox deaths'><p>Total Deaths</p><p>{country.deaths}</p></div>\r\n                <div className='infoBox deaths'><p>Today Deaths</p><p>{country.todayDeaths}</p></div>\r\n                <div className='infoBox recovered'><p>Total Recovered</p><p>{country.recovered}</p></div>\r\n                <div className='infoBox recovered'><p>Today Recovered</p><p>{country.todayRecovered}</p></div>\r\n                <div className='infoBox active'><p>Active</p><p>{country.active}</p></div>\r\n                <div className='infoBox critical'><p>Critical</p><p>{country.critical}</p></div>\r\n                <div className='infoBox'><p>Cases Per Million</p><p>{country.casesPerOneMillion}</p></div>\r\n                <div className='infoBox deaths'><p>Deaths Per Million</p><p>{country.deathsPerOneMillion}</p></div>\r\n                <div className='infoBox'><p>Total tests</p><p>{country.tests}</p></div>\r\n                <div className='infoBox'><p>Tests Per Million</p><p>{country.testsPerOneMillion}</p></div>\r\n                <div className='infoBox'><p>population</p><p>{country.population}</p></div>\r\n                <div className='infoBox'><p>one Case Per People</p><p>{country.oneCasePerPeople}</p></div>\r\n                <div className='infoBox deaths'><p>one Death Per People</p><p>{country.oneDeathPerPeople}</p></div>\r\n                <div className='infoBox'><p>One Test Per People</p><p>{country.oneTestPerPeople}</p></div>\r\n                <div className='infoBox active'><p>Active Per One Million</p><p>{country.activePerOneMillion}</p></div>\r\n                <div className='infoBox recovered'><p>Recovered Per One Million</p><p>{country.recoveredPerOneMillion}</p></div>\r\n                <div className='infoBox critical'><p>Critical Per One Million</p><p>{country.criticalPerOneMillion}</p></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryCard","import React from 'react'\r\nimport './EveryCountry.css'\r\n\r\n// <img className='countryFlag' src={country.countryInfo.flag} alt='' /> \r\n\r\nconst EveryCountry = ({ countriesArray, handleClick, onSearchChange }) => {\r\n    return(\r\n        <div className='everyPerson'>\r\n            <input className='countrylooker' type='search'  placeholder='search user' onChange={onSearchChange} />\r\n            <table className='countriesTable'> \r\n                <thead>\r\n                    <tr className='headers'>\r\n                        <th>Country</th>\r\n                        <th>Total Cases</th>\r\n                        <th>Cases Today</th>\r\n                        <th>Deaths</th>\r\n                        <th>Deaths Today</th>\r\n                        <th>Recovered</th>\r\n                        <th>Recovered Today</th>\r\n                        <th>Active</th>\r\n                        <th>Critical</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        countriesArray.map((country, index) => {\r\n                            return(\r\n                                <tr key={country.country}>\r\n                                    <td className='countryName' onClick={handleClick}>{country.country}</td>\r\n                                    <td>{country.cases}</td>\r\n                                    <td>{country.todayCases}</td>\r\n                                    <td className='deaths'>{country.deaths}</td>\r\n                                    <td className='deaths' >{country.todayDeaths}</td>\r\n                                    <td className='recovered' >{country.recovered}</td>\r\n                                    <td className='recovered' >{country.todayRecovered}</td>\r\n                                    <td className='active' >{country.active}</td>\r\n                                    <td className='critical' >{country.critical}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EveryCountry","import React from 'react';\nimport CountryCard from'./components/CountryCard/CountryCard'\nimport EveryCountry from './components/EveryCountry/EveryCountry'\nimport './App.css'\n\nclass App extends React.Component{\n  constructor() {\n    super()\n    this.state = {\n      countriesArray: [],\n      country: [],\n      searchfield: '',\n      isCountryDisplayed: false\n    }\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value})\n  }\n\n  componentDidMount() {\n    fetch('https://disease.sh/v3/covid-19/countries')\n    .then(response => response.json())\n    .then(data => this.setState({ countriesArray: data }))\n  }\n\n  handleClick = (event) => {\n    for(var index = 0; index < this.state.countriesArray.length; index++) {\n      if(event.target.innerHTML === this.state.countriesArray[index].country) {\n        this.setState({\n          country: this.state.countriesArray[index],\n          isCountryDisplayed: true\n        })\n      }\n    }\n  }\n\n  render() {\n    const { countriesArray, searchfield} = this.state\n    const filteredCountries = countriesArray.filter(country =>{\n      return country.country.toLowerCase().includes(searchfield.toLowerCase())\n    })\n    return (\n      <div className='wholeContent'>\n        {\n          this.state.isCountryDisplayed ? <CountryCard country={this.state.country}/> : <h6>Click on the specific country name to view all the details about the country.</h6>\n        }\n        <EveryCountry countriesArray={filteredCountries} handleClick={this.handleClick} onSearchChange={this.onSearchChange}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}